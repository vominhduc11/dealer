import { useState } from 'react'
import './ProductDetail.css'

const ProductDetail = ({ product, onBack, onAddToCart }) => {
  const [quantity, setQuantity] = useState(1)
  const [activeTab, setActiveTab] = useState('description')
  const [showNotification, setShowNotification] = useState(false)

  if (!product) {
    return (
        <div className="pt-[70px] xl:pt-[80px] 2xl:pt-[90px] 3xl:pt-[100px] 4xl:pt-[120px] 5xl:pt-[140px] pb-20 md:pb-5 max-w-screen-5xl mx-auto px-4 sm:px-5 md:px-6 lg:px-8 xl:px-10 2xl:px-12 3xl:px-16 4xl:px-20 5xl:px-24">
        <div className="error-message">
          <p>Kh√¥ng t√¨m th·∫•y th√¥ng tin s·∫£n ph·∫©m</p>
          <button className="btn btn-primary" onClick={onBack}>
            Quay l·∫°i danh s√°ch
          </button>
        </div>
      </div>
    )
  }

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price)
  }


  const handleQuantityChange = (newQuantity) => {
    if (newQuantity >= 1 && newQuantity <= product.stock) {
      setQuantity(newQuantity)
    }
  }

  const handleAddToCart = () => {
    onAddToCart(product, quantity)
    setShowNotification(true)
    setTimeout(() => {
      setShowNotification(false)
    }, 3000)
  }

  const getProductSpecs = () => {
    // Th√¥ng s·ªë k·ªπ thu·∫≠t d·ª±a tr√™n SKU
    return {
      'SKU': product.sku,
      'T√™n s·∫£n ph·∫©m': product.name,
      'Gi√°': formatPrice(product.price),
      'T·ªìn kho': `${product.stock} s·∫£n ph·∫©m`,
      'B·∫£o h√†nh': `${product.warranty} th√°ng`,
      'M√¥ t·∫£': product.description
    }
  }

  const specs = getProductSpecs()

  return (
      <div className="pt-[70px] xl:pt-[80px] 2xl:pt-[90px] 3xl:pt-[100px] 4xl:pt-[120px] 5xl:pt-[140px] pb-20 md:pb-5 max-w-screen-5xl mx-auto px-4 sm:px-5 md:px-6 lg:px-8 xl:px-10 2xl:px-12 3xl:px-16 4xl:px-20 5xl:px-24">
      <div className="detail-header">
        <div className="breadcrumb">
          <button className="breadcrumb-btn" onClick={onBack}>
            S·∫£n ph·∫©m
          </button>
          <span className="breadcrumb-separator">‚Ä∫</span>
          <span className="breadcrumb-current">{product.name}</span>
        </div>
      </div>

      <div className="detail-content">
        <div className="product-images">
          <div className="main-image">
            <img src={product.image} alt={product.name} />
          </div>
        </div>

        <div className="product-info">
          <div className="category-badge">{product.sku}</div>
          <h1 className="product-title">{product.name}</h1>
          <p className="product-description">{product.description}</p>
          
          <div className="product-meta">
            <div className="price-info">
              <div className="current-price">{formatPrice(product.price)}</div>
              <div className="price-note">Gi√° ƒë√£ bao g·ªìm VAT</div>
            </div>
            
            <div className="stock-info">
              <span className={`stock-status ${product.stock > 0 ? 'in-stock' : 'out-stock'}`}>
                {product.stock > 0 ? `C√≤n ${product.stock} s·∫£n ph·∫©m` : 'H·∫øt h√†ng'}
              </span>
            </div>
            
            <div className="warranty-info">
              <span>üõ°Ô∏è B·∫£o h√†nh: {product.warranty} th√°ng</span>
            </div>
          </div>

          <div className="purchase-section">
            <div className="quantity-selector">
              <label>S·ªë l∆∞·ª£ng:</label>
              <div className="quantity-controls">
                <button 
                  className="qty-btn"
                  onClick={() => handleQuantityChange(quantity - 1)}
                  disabled={quantity <= 1}
                >
                  -
                </button>
                <input 
                  type="number" 
                  value={quantity}
                  onChange={(e) => handleQuantityChange(parseInt(e.target.value) || 1)}
                  min="1"
                  max={product.stock}
                />
                <button 
                  className="qty-btn"
                  onClick={() => handleQuantityChange(quantity + 1)}
                  disabled={quantity >= product.stock}
                >
                  +
                </button>
              </div>
            </div>
            
            <div className="total-price">
              <strong>T·ªïng: {formatPrice(product.price * quantity)}</strong>
            </div>
            
            <button 
              className="btn btn-primary add-to-cart-btn"
              onClick={handleAddToCart}
              disabled={product.stock === 0}
            >
              üõí Th√™m v√†o gi·ªè h√†ng
            </button>
          </div>
        </div>
      </div>

      <div className="detail-tabs">
        <div className="tab-headers">
          <button 
            className={`tab-header ${activeTab === 'description' ? 'active' : ''}`}
            onClick={() => setActiveTab('description')}
          >
            M√¥ t·∫£ chi ti·∫øt
          </button>
          <button 
            className={`tab-header ${activeTab === 'specs' ? 'active' : ''}`}
            onClick={() => setActiveTab('specs')}
          >
            Th√¥ng s·ªë k·ªπ thu·∫≠t
          </button>
          <button 
            className={`tab-header ${activeTab === 'warranty' ? 'active' : ''}`}
            onClick={() => setActiveTab('warranty')}
          >
            Ch√≠nh s√°ch b·∫£o h√†nh
          </button>
        </div>

        <div className="tab-content">
          {activeTab === 'description' && (
            <div className="tab-pane">
              <h3>M√¥ t·∫£ chi ti·∫øt s·∫£n ph·∫©m</h3>
              <p>{product.description}</p>
              <p>
                {product.name} l√† m·ªôt s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i v√† t√≠nh nƒÉng v∆∞·ª£t tr·ªôi. 
                S·∫£n ph·∫©m ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ mang l·∫°i tr·∫£i nghi·ªám t·ªët nh·∫•t cho ng∆∞·ªùi d√πng v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t.
              </p>
              <ul>
                <li>Thi·∫øt k·∫ø cao c·∫•p, sang tr·ªçng</li>
                <li>Hi·ªáu nƒÉng m·∫°nh m·∫Ω, ·ªïn ƒë·ªãnh</li>
                <li>T·ªëi ∆∞u h√≥a tr·∫£i nghi·ªám ng∆∞·ªùi d√πng</li>
                <li>H·ªó tr·ª£ c√°c t√≠nh nƒÉng th√¥ng minh</li>
              </ul>
            </div>
          )}
          
          {activeTab === 'specs' && (
            <div className="tab-pane">
              <h3>Th√¥ng s·ªë k·ªπ thu·∫≠t</h3>
              <div className="specs-table">
                {Object.entries(specs).map(([key, value]) => (
                  <div key={key} className="spec-row">
                    <div className="spec-label">{key}</div>
                    <div className="spec-value">{value}</div>
                  </div>
                ))}
              </div>
            </div>
          )}
          
          {activeTab === 'warranty' && (
            <div className="tab-pane">
              <h3>Ch√≠nh s√°ch b·∫£o h√†nh</h3>
              <div className="warranty-policy">
                <p><strong>Th·ªùi gian b·∫£o h√†nh:</strong> {product.warranty} th√°ng</p>
                <p><strong>ƒêi·ªÅu ki·ªán b·∫£o h√†nh:</strong></p>
                <ul>
                  <li>S·∫£n ph·∫©m c√≤n trong th·ªùi h·∫°n b·∫£o h√†nh</li>
                  <li>C√≥ phi·∫øu b·∫£o h√†nh v√† h√≥a ƒë∆°n mua h√†ng</li>
                  <li>L·ªói do nh√† s·∫£n xu·∫•t, kh√¥ng do ng∆∞·ªùi d√πng</li>
                  <li>S·∫£n ph·∫©m ch∆∞a b·ªã t√°c ƒë·ªông b·ªüi ngo·∫°i l·ª±c</li>
                </ul>
                <p><strong>Quy tr√¨nh b·∫£o h√†nh:</strong></p>
                <ol>
                  <li>Li√™n h·ªá trung t√¢m b·∫£o h√†nh ho·∫∑c ƒë·∫°i l√Ω</li>
                  <li>Mang s·∫£n ph·∫©m v√† gi·∫•y t·ªù li√™n quan ƒë·∫øn trung t√¢m</li>
                  <li>Ki·ªÉm tra v√† x√°c ƒë·ªãnh l·ªói</li>
                  <li>S·ª≠a ch·ªØa ho·∫∑c thay th·∫ø s·∫£n ph·∫©m</li>
                  <li>Giao s·∫£n ph·∫©m v·ªÅ cho kh√°ch h√†ng</li>
                </ol>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Professional Notification */}
      {showNotification && (
        <div className="cart-notification">
          <div className="notification-content">
            <div className="notification-icon">‚úì</div>
            <div className="notification-info">
              <h4>ƒê√£ th√™m v√†o gi·ªè h√†ng!</h4>
              <p>{quantity} √ó {product.name}</p>
              <p className="notification-price">{formatPrice(product.price * quantity)}</p>
            </div>
            <div className="notification-image">
              <img src={product.image} alt={product.name} />
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default ProductDetail